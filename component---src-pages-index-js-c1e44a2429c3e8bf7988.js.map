{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/tabs.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Tabs","children","react_default","style","maxWidth","margin","display","tabs","to","text","icon","home_default","collections_default","assignment_default","person_default","Nav","props","_this","_Component","call","this","createTabs","map","element","i","key","gatsby_browser_entry","color","fontFamily","textDecoration","padding","state","mobile","verticalAlign","componentDidMount","console","log","window","innerWidth","setState","render","marginBottom","justifyContent","alignItems","siteTitle","Component","Layout","_856328897","Fragment","nav","paddingTop","node"],"mappings":"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","file":"component---src-pages-index-js-c1e44a2429c3e8bf7988.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n//import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>{`Welcome`}</h1>\n  </Layout>\n)\n\n/*\nexport const query = graphql`\n  query{\n    github {\n      viewer {\n        name\n        repositories(last: 5) {\n          nodes {\n            name\n            description\n            url\n          }\n        }\n      } \n    }\n  }\n`\n*/\nexport default IndexPage \n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nconst Tabs = ({ children }) => (\n  <div\n    style={{\n      maxWidth: 960,\n//      padding: `1rem 1.0875rem`,\n      margin: 0,\n      display: `flex`,\n    }}\n  >\n    { children }\n  </div>\n)\n\nexport default Tabs\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { Component } from \"react\"\nimport HomeIcon from \"@material-ui/icons/home\"\nimport PersonIcon from \"@material-ui/icons/person\"\nimport CollectionsIcon from \"@material-ui/icons/collections\"\nimport AssignmentIcon from \"@material-ui/icons/assignment\"\nimport Tabs from \"./tabs\"\n\nconst tabs = [\n  { to: '/', text: 'Home', icon: <HomeIcon /> },\n  { to: '/portfolio', text: 'Portfolio', icon: <CollectionsIcon /> },\n  { to: '/resume', text: 'Resume', icon: <AssignmentIcon />},\n  { to: '/contact', text: 'Contact', icon: <PersonIcon />},\n];\n\nclass Nav extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      mobile: false,\n    };\n  } \n\n  componentDidMount(){\n    console.log(window.innerWidth);\n    this.setState({ mobile: window.innerWidth < 700 });\n  }\n\n  createTabs = () => {\n    return tabs.map( (element, i) => \n        <h3 key={ i } style={{ margin: 0 }}>\n          <Link\n            to={element.to}\n            style={{\n              color: `grey`,\n              fontFamily: `Raleway`,\n              textDecoration: `none`,\n              padding: `0px 7px`,\n            }}\n          >\n            { element.icon }\n            { !this.state.mobile && <span style={{ verticalAlign: `top` }}>{ element.text }</span> } \n          </Link>\n        </h3>\n      );\n  }\n\n\n  render(){\n    return (\n      <header\n        style={{\n          marginBottom: `1.45rem`,\n          display: `flex`,\n          justifyContent: `space-between`,\n          alignItems: `center`,\n        }}\n      >\n        <div\n          style={{\n            maxWidth: 960,\n            padding: `1rem 1.0875rem`,\n          }}\n        >\n          <h3 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: `grey`,\n                fontFamily: `Raleway`,\n                textDecoration: `none`,\n              }}\n            >\n              {this.props.siteTitle}\n            </Link>\n          </h3>\n        </div>\n\n        <Tabs>\n          { this.createTabs() }\n        </Tabs>\n      </header>\n    )\n  }\n}\n\nNav.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNav.defaultProps = {\n  siteTitle: `Default Title`,\n}\n\nexport default Nav\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Nav from \"./nav\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Nav siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}