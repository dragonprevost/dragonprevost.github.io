{"version":3,"sources":["webpack:///./src/components/media-bar.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/tabs.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["imgStyle","width","minWidth","maxWidth","marginLeft","marginRight","media","icon","name","to","MediaBar","react_default","a","createElement","map","item","i","href","src","style","alt","key","bodyStyle","textAlign","minHeight","display","flexDirection","alignItems","justifyContent","borderRadius","IndexPage","_ref","data","layout","seo","title","media_bar","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","object","createContext","func","Tabs","children","margin","tabs","text","home_default","collections_default","assignment_default","person_default","Nav","props","_this","_Component","call","this","createTabs","element","gatsby_link_default","color","fontFamily","textDecoration","padding","state","mobile","verticalAlign","componentDidMount","console","log","window","innerWidth","setState","render","siteTitle","Component","Layout","_856328897","Fragment","nav","paddingTop","node","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-index-js-0ee58f9a3393fb85a7b5.js","sourcesContent":["import React from \"react\"\n\n\nconst imgStyle = {\n  width: `10%`,\n  minWidth: `25px`,\n  maxWidth: `100px`,\n  marginLeft: `7.5%`,\n  marginRight: `7.5%`,\n};\n\nconst media = [\n  {icon: \"https://image.flaticon.com/icons/svg/25/25231.svg\", name: `GitHub`, to: \"https://github.com/dragonprevost\"},\n  {icon: \"https://image.flaticon.com/icons/svg/25/25320.svg\", name: `LinkedIn`, to: \"https://www.linkedin.com/in/dragonprevost/\" },\n  {icon: \"https://image.flaticon.com/icons/svg/25/25660.svg\", name: `Twitter`, to: \"https://twitter.com/DragonPrevost\" },\n  {icon: \"https://image.flaticon.com/icons/svg/25/25236.svg\", name: `Mail`, to: \"mailto:dragon@dkp.io\" },\n];\n\nconst MediaBar = () => {\n  return(\n    <div>\n      { media.map( ( item, i ) => {\n        return(\n          <span>\n            <a href={ item.to }>\n              <img\n                src={ item.icon }\n                style={ imgStyle }\n                alt={ item.name }\n                key={ i }\n              />\n            </a>\n          </span>\n        )\n      } ) }\n    </div>\n  )\n}\n\nexport default MediaBar\n","import React from \"react\"\n\nimport MediaBar from \"../components/media-bar\"\nimport Layout from \"../components/layout\"\n//import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst bodyStyle = {\n  textAlign: `center`,\n  minHeight: `80vh`,\n  display: `flex`,\n  flexDirection: `column`,\n  alignItems: `center`,\n  justifyContent: `center`,\n};\n\nconst imgStyle = {\n  borderRadius: `50%`,\n  width: `30%`,\n  minWidth: `200px`,\n};\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div style={ bodyStyle }>\n      <img src={\"https://avatars2.githubusercontent.com/u/22180881?s=460&v=4\"} alt=\"display\" style={ imgStyle } />\n      <p>Computer Science &#8226; Web Development &#8226; Systems Engineering</p>\n      <MediaBar />\n    </div> \n  </Layout>\n)\n\n/*\nexport const query = graphql`\n  query{\n    github {\n      viewer {\n        name\n        repositories(last: 5) {\n          nodes {\n            name\n            description\n            url\n          }\n        }\n      } \n    }\n  }\n`\n*/\nexport default IndexPage \n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\n\nconst Tabs = ({ children }) => (\n  <div\n    style={{\n      maxWidth: 960,\n//      padding: `1rem 1.0875rem`,\n      margin: 0,\n      display: `flex`,\n    }}\n  >\n    { children }\n  </div>\n)\n\nexport default Tabs\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { Component } from \"react\"\nimport HomeIcon from \"@material-ui/icons/home\"\nimport PersonIcon from \"@material-ui/icons/person\"\nimport CollectionsIcon from \"@material-ui/icons/collections\"\nimport AssignmentIcon from \"@material-ui/icons/assignment\"\nimport Tabs from \"./tabs\"\n\nconst tabs = [\n  { to: '/', text: 'Home', icon: <HomeIcon /> },\n  { to: '/portfolio', text: 'Portfolio', icon: <CollectionsIcon /> },\n  { to: '/resume', text: 'Resume', icon: <AssignmentIcon />},\n  { to: '/contact', text: 'Contact', icon: <PersonIcon />},\n];\n\nclass Nav extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      mobile: false,\n    };\n  } \n\n  componentDidMount(){\n    console.log(window.innerWidth);\n    this.setState({ mobile: window.innerWidth < 700 });\n  }\n\n  createTabs = () => {\n    return tabs.map( (element, i) => \n        <h3 key={ i } style={{ margin: 0 }}>\n          <Link\n            to={element.to}\n            style={{\n              color: `grey`,\n              fontFamily: `Raleway`,\n              textDecoration: `none`,\n              padding: `0px 7px`,\n            }}\n          >\n            { element.icon }\n            { !this.state.mobile && <span style={{ verticalAlign: `top` }}>{ element.text }</span> } \n          </Link>\n        </h3>\n      );\n  }\n\n\n  render(){\n    return (\n      <header\n        style={{\n          display: `flex`,\n          justifyContent: `space-between`,\n          alignItems: `center`,\n        }}\n      >\n        <div\n          style={{\n            maxWidth: 960,\n            padding: `1rem 1.0875rem`,\n          }}\n        >\n          <h3 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: `grey`,\n                fontFamily: `Raleway`,\n                textDecoration: `none`,\n              }}\n            >\n              {this.props.siteTitle}\n            </Link>\n          </h3>\n        </div>\n\n        <Tabs>\n          { this.createTabs() }\n        </Tabs>\n      </header>\n    )\n  }\n}\n\nNav.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNav.defaultProps = {\n  siteTitle: `Default Title`,\n}\n\nexport default Nav\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Nav from \"./nav\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Nav siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}